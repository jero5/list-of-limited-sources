
(class TestFib

  (def self.fib (n (= a 0) (= b 1))
    (if (<= n 0)
      a
    (else
      (fib (- n 1) b (+ a b))))))

(class TestBounce

  (def self.bounce0 (n)
    (bounce1 (- n 1)))

  (def self.bounce1 (n)
    (bounce2 (- n 1)))

  (def self.bounce2 (n)
    (if (<= n 0)
      -999
    (else
      (bounce0 (- n 1))))))

(. (Array.new 25) clear)

(= ary ([] (+ 6 7) 10 "hello"))
(= elems (ary[] (.. 0 2)))
(= hsh ({} (:where "there") (:when (+ 3 2))))
(= val (hsh[] :where))

(= quo (/ 6 2))

(= sneak_native_past_parser '\\')
(= rgx /\\ #{sneak_native_past_parser + ''} \//x)

(= str "\\ \ \"")
(= flt 10.8)

(= num 200_000)

(puts (TestBounce.bounce0 num))
(puts (TestFib.fib 10))

